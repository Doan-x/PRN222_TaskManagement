// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PRN222_TaskManagement.Models;

#nullable disable

namespace PRN222_TaskManagement.Migrations
{
    [DbContext(typeof(Prn222TaskManagementContext))]
    [Migration("20250328035721_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PRN222_TaskManagement.Models.AuditLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("log_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("action");

                    b.Property<DateTime?>("ActionTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("action_time")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<int?>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("LogId")
                        .HasName("PK__AuditLog__9E2397E00216AADF");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.CalendarSync", b =>
                {
                    b.Property<int>("SyncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("sync_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SyncId"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("access_token");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<DateTime?>("LastSynced")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_synced");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("refresh_token");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("service_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("SyncId")
                        .HasName("PK__Calendar__54E41ED02F3C5CB1");

                    b.HasIndex("UserId");

                    b.ToTable("CalendarSyncs");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("CategoryId")
                        .HasName("PK__Categori__D54EE9B4E284E110");

                    b.HasIndex("UserId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("category_id");

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("color");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_time");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("medium")
                        .HasColumnName("priority");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_time");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("EventId")
                        .HasName("PK__Events__2370F7278127D8A1");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.EventShare", b =>
                {
                    b.Property<int>("ShareId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("share_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShareId"));

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<string>("Permission")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("view")
                        .HasColumnName("permission");

                    b.Property<DateTime?>("SharedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("shared_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("SharedWithEmail")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("shared_with_email");

                    b.Property<int?>("SharedWithUserId")
                        .HasColumnType("int")
                        .HasColumnName("shared_with_user_id");

                    b.HasKey("ShareId")
                        .HasName("PK__EventSha__C36E8AE5F657CFD5");

                    b.HasIndex("EventId");

                    b.HasIndex("SharedWithUserId");

                    b.ToTable("EventShares");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.Label", b =>
                {
                    b.Property<int>("LabelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("label_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LabelId"));

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("color");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("LabelId")
                        .HasName("PK__Labels__E44FFA5803D957CF");

                    b.ToTable("Labels");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("notification_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("EventId")
                        .HasColumnType("int")
                        .HasColumnName("event_id");

                    b.Property<string>("NotifyMethod")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("email")
                        .HasColumnName("notify_method");

                    b.Property<DateTime>("NotifyTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("notify_time");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("pending")
                        .HasColumnName("status");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("NotificationId")
                        .HasName("PK__Notifica__E059842F16107B95");

                    b.HasIndex("EventId");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("task_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<DateTime?>("CompletedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("completed_at")
                        .HasDefaultValueSql("(NULL)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("description");

                    b.Property<DateOnly?>("DueDate")
                        .HasColumnType("date")
                        .HasColumnName("due_date");

                    b.Property<string>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("medium")
                        .HasColumnName("priority");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("pending")
                        .HasColumnName("status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("TaskId")
                        .HasName("PK__Tasks__0492148DEBC5EF70");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("password_hash");

                    b.Property<string>("Role")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasDefaultValue("user")
                        .HasColumnName("role");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("UserId")
                        .HasName("PK__Users__B9BE370F28BE3159");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E6164955854E7")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TaskLabel", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("task_id");

                    b.Property<int>("LabelId")
                        .HasColumnType("int")
                        .HasColumnName("label_id");

                    b.HasKey("TaskId", "LabelId")
                        .HasName("PK__TaskLabe__9AD6EB28B3BC91DC");

                    b.HasIndex("LabelId");

                    b.ToTable("TaskLabels", (string)null);
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.AuditLog", b =>
                {
                    b.HasOne("PRN222_TaskManagement.Models.Event", "Event")
                        .WithMany("AuditLogs")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__AuditLogs__event__72C60C4A");

                    b.HasOne("PRN222_TaskManagement.Models.User", "User")
                        .WithMany("AuditLogs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__AuditLogs__user___71D1E811");

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.CalendarSync", b =>
                {
                    b.HasOne("PRN222_TaskManagement.Models.User", "User")
                        .WithMany("CalendarSyncs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__CalendarS__user___6D0D32F4");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.Category", b =>
                {
                    b.HasOne("PRN222_TaskManagement.Models.User", "User")
                        .WithMany("Categories")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Categorie__user___5165187F");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.Event", b =>
                {
                    b.HasOne("PRN222_TaskManagement.Models.Category", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Events__category__59063A47");

                    b.HasOne("PRN222_TaskManagement.Models.User", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Events__user_id__5812160E");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.EventShare", b =>
                {
                    b.HasOne("PRN222_TaskManagement.Models.Event", "Event")
                        .WithMany("EventShares")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK__EventShar__event__6754599E");

                    b.HasOne("PRN222_TaskManagement.Models.User", "SharedWithUser")
                        .WithMany("EventShares")
                        .HasForeignKey("SharedWithUserId")
                        .HasConstraintName("FK__EventShar__share__68487DD7");

                    b.Navigation("Event");

                    b.Navigation("SharedWithUser");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.Notification", b =>
                {
                    b.HasOne("PRN222_TaskManagement.Models.Event", "Event")
                        .WithMany("Notifications")
                        .HasForeignKey("EventId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__event__619B8048");

                    b.HasOne("PRN222_TaskManagement.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Notificat__user___60A75C0F");

                    b.Navigation("Event");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.Task", b =>
                {
                    b.HasOne("PRN222_TaskManagement.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Tasks__user_id__7C4F7684");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TaskLabel", b =>
                {
                    b.HasOne("PRN222_TaskManagement.Models.Label", null)
                        .WithMany()
                        .HasForeignKey("LabelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TaskLabel__label__02FC7413");

                    b.HasOne("PRN222_TaskManagement.Models.Task", null)
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__TaskLabel__task___02084FDA");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.Category", b =>
                {
                    b.Navigation("Events");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.Event", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("EventShares");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("PRN222_TaskManagement.Models.User", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("CalendarSyncs");

                    b.Navigation("Categories");

                    b.Navigation("EventShares");

                    b.Navigation("Events");

                    b.Navigation("Notifications");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
